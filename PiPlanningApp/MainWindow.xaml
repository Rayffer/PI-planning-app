<Window x:Class="PiPlanningApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PiPlanningApp"
        xmlns:converters="clr-namespace:PiPlanningApp.Converters"
        xmlns:models="clr-namespace:PiPlanningApp.Models"
        xmlns:behaviours="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:types="clr-namespace:PiPlanningApp.Types"
        xmlns:controls="clr-namespace:PiPlanningApp.Controls"
        mc:Ignorable="d"
        Title="PI Planning Application"
        x:Name="PIPlanningMainWindow"
        d:DataContext="{d:DesignInstance local:MainWindowViewModel}"
        WindowState="Maximized">
    <Window.Resources>
        <converters:IterationTitleConverter x:Key="IterationTitleConverter" />
        <converters:BooleanIsFalseToVisibilityConverter x:Key="BooleanIsFalseToVisibilityConverter" />
        <converters:BooleanIsTrueToVisibilityConverter x:Key="BooleanIsTrueToVisibilityConverter" />
        <converters:GridColumnOrRowsToStartConverter x:Key="GridColumnOrRowsToStartConverter" />
        <CollectionViewSource x:Key="cvsFeatures" Source="{Binding Features}" />
        <CollectionViewSource x:Key="cvsIterations" Source="{Binding Iterations}" />
        <CollectionViewSource x:Key="cvsUserStory" Source="{Binding UserStories}" />
        <ContextMenu x:Key="FeatureContextMenu"></ContextMenu>
    </Window.Resources>
    <Window.DataContext>
        <local:MainWindowViewModel x:Name="MainWindowViewModel" />
    </Window.DataContext>
    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <WrapPanel Orientation="Horizontal">
                <Button Content="Add New Feature" Padding="3" Margin="2" Command="{Binding AddFeatureCommand}" />
                <Button Content="Add New Iteration" Padding="3" Margin="2" Command="{Binding AddIterationCommand}" />
            </WrapPanel>
            <Grid Grid.Row="1" x:Name="MainGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="200" MaxWidth="400" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="150" MaxHeight="600" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <ItemsControl Grid.Row="1" ItemsSource="{Binding Source={StaticResource cvsFeatures}}" MaxWidth="400">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid local:GridHelpers.RowCount="{Binding Count, Source={StaticResource cvsFeatures}}"
                                  local:GridHelpers.StarRows="{Binding Count, Source={StaticResource cvsFeatures}, Converter={StaticResource GridColumnOrRowsToStartConverter}}" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="models:Feature">
                            <Grid Margin="3" MinHeight="200">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding FeatureType}">
                                                <DataTrigger.Value>
                                                    <types:FeatureTypes>Feature</types:FeatureTypes>
                                                </DataTrigger.Value>
                                                <DataTrigger.Setters>
                                                    <Setter Property="Background" Value="LightGoldenrodYellow" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FeatureType}">
                                                <DataTrigger.Value>
                                                    <types:FeatureTypes>TechnicalProductQuality</types:FeatureTypes>
                                                </DataTrigger.Value>
                                                <DataTrigger.Setters>
                                                    <Setter Property="Background" Value="CadetBlue" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FeatureType}">
                                                <DataTrigger.Value>
                                                    <types:FeatureTypes>Enablers</types:FeatureTypes>
                                                </DataTrigger.Value>
                                                <DataTrigger.Setters>
                                                    <Setter Property="Background" Value="CadetBlue" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding FeatureType}">
                                                <DataTrigger.Value>
                                                    <types:FeatureTypes>NotDefined</types:FeatureTypes>
                                                </DataTrigger.Value>
                                                <DataTrigger.Setters>
                                                    <Setter Property="Background" Value="Transparent" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete Feature">
                                            <MenuItem.Style>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="Command" Value="{Binding Source={x:Reference Name=PIPlanningMainWindow}, Path=DataContext.DeleteFeatureCommand}" />
                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <TextBlock 
                                    Text="{Binding FeatureNumber}"
                                    Margin="10, 5, 0, 0"
                                    Visibility="{Binding IsEditing, Converter={StaticResource BooleanIsFalseToVisibilityConverter}}" 
                                    Cursor="Hand">
                                    <behaviours:Interaction.Triggers>
                                        <behaviours:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                            <behaviours:InvokeCommandAction Command="{Binding DataContext.EditFeatureCommand, ElementName=PIPlanningMainWindow}" CommandParameter="{Binding}" />
                                        </behaviours:EventTrigger>
                                    </behaviours:Interaction.Triggers>
                                </TextBlock>
                                <controls:IntegerNumericTextbox
                                    Text="{Binding FeatureNumber}"
                                    Margin="10, 5, 0, 0"
                                    Visibility="{Binding IsEditing, Converter={StaticResource BooleanIsTrueToVisibilityConverter}}"/>
                                <TextBlock Text="{Binding Title}"
                                           TextWrapping="Wrap"
                                           Grid.Column="1"
                                           Grid.ColumnSpan="2"
                                           Visibility="{Binding IsEditing, Converter={StaticResource BooleanIsFalseToVisibilityConverter}}"
                                           Margin="10, 5, 10, 0"
                                           Cursor="Hand">
                                    <behaviours:Interaction.Triggers>
                                        <behaviours:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                            <behaviours:InvokeCommandAction Command="{Binding DataContext.EditFeatureCommand, ElementName=PIPlanningMainWindow}" CommandParameter="{Binding}" />
                                        </behaviours:EventTrigger>
                                    </behaviours:Interaction.Triggers></TextBlock>
                                <TextBox Grid.Column="1"
                                         Grid.ColumnSpan="2"
                                         Margin="10, 5, 10, 0" 
                                         TextWrapping="Wrap" 
                                         Text="{Binding Title}"
                                         Visibility="{Binding IsEditing, Converter={StaticResource BooleanIsTrueToVisibilityConverter}}">
                                    <behaviours:Interaction.Triggers>
                                        <behaviours:DataTrigger Binding="{Binding Visibility, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="Visibility.Visible" Comparison="Equal">
                                            <behaviours:ChangePropertyAction PropertyName="IsFocused" Value="True" />
                                        </behaviours:DataTrigger>
                                        <behaviours:EventTrigger EventName="LostFocus">
                                            <behaviours:InvokeCommandAction Command="{Binding DataContext.EditFeatureCommand, ElementName=PIPlanningMainWindow}" CommandParameter="{Binding}" />
                                        </behaviours:EventTrigger>
                                    </behaviours:Interaction.Triggers>
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Visibility, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="Visible">
                                                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Grid.Column" Value="0" />
                            <Setter Property="Grid.Row" Value="{Binding RowPosition}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
                <ItemsControl Grid.Column="1" ItemsSource="{Binding Source={StaticResource cvsIterations}}" HorizontalContentAlignment="Stretch">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid local:GridHelpers.ColumnCount="{Binding Count, Source={StaticResource cvsIterations}}" 
                                  local:GridHelpers.StarColumns="{Binding Count, Source={StaticResource cvsIterations}, Converter={StaticResource GridColumnOrRowsToStartConverter}}"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="models:Iteration">
                            <Grid Background="LightGray" Margin="3" MinWidth="200">
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete Feature">
                                            <MenuItem.Style>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="Command" Value="{Binding Source={x:Reference Name=PIPlanningMainWindow}, Path=DataContext.DeleteIterationCommand}" />
                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <TextBlock Text="{Binding Converter={StaticResource IterationTitleConverter}}" />
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Grid.Row" Value="0" />
                            <Setter Property="Grid.Column" Value="{Binding ColumnPosition}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Grid>
        </Grid>
    </ScrollViewer>
</Window>